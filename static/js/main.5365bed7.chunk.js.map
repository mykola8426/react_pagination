{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pageNumbers","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","map","number","active","items","App","useState","itemPerPage","setItemPerPage","setCurrentPage","startIndex","endIndex","length","itemsOnCurrentPage","slice","id","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAAa,SAAC,GAKb,IAJZC,EAIW,EAJXA,MACAC,EAGW,EAHXA,QACAC,EAEW,EAFXA,YACAC,EACW,EADXA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAcd,EAAW,EAAGW,GAC5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAcnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUJ,IAAnD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAde,WAChBN,GACHL,EAAaD,EAAc,IAOzB,oBAWAK,EAAYQ,KAAI,SAAAC,GACd,OACE,oBACEN,UACEC,IAAW,YAAa,CAAEM,OAAQf,IAAgBc,IAFtD,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAcb,oBAAIN,UAAWC,IAAW,YAAa,CAAEC,SAAUH,IAAnD,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QApDe,WAChBL,GACHN,EAAaD,EAAc,IA6CzB,wBC9DFgB,EAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBqB,EAApB,KACMC,GAActB,EAAc,GAAKmB,EACjCI,EAAWvB,EAAcmB,EAAcH,EAAMQ,OAC/CR,EAAMQ,OACNxB,EAAcmB,EACZM,EAAqBT,EAAMU,MAAMJ,EAAYC,GAEnD,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EAAa,EAD9C,cACqDC,EADrD,eACoEP,EAAMQ,OAD1E,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOT,EACPU,SAAU,SAACC,GACTV,EAAeW,OAAOD,EAAME,OAAOJ,QACnCP,EAAe,IAPnB,UAUE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOkB,EAAMQ,OACbzB,QAASoB,EACTnB,YAAaA,EACbC,aAAcoB,IAEhB,6BAEII,EAAmBZ,KAAI,SAAAqB,GAAI,OACzB,oBAAI,UAAQ,OAAZ,SAAoBA,aCxDhCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5365bed7.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page:number) => void;\n};\n\nexport const Pagination = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n} :Props) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, totalPages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const selectNextPage = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const selectPrevPage = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: isFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={selectPrevPage}\n        >\n          «\n        </a>\n      </li>\n      {\n        pageNumbers.map(number => {\n          return (\n            <li\n              className={\n                classNames('page-item', { active: currentPage === number })\n              }\n              key={number}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${number}`}\n                onClick={() => onPageChange(number)}\n              >\n                {number}\n              </a>\n            </li>\n          );\n        })\n      }\n      <li className={classNames('page-item', { disabled: isLastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={selectNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemPerPage, setItemPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const startIndex = (currentPage - 1) * itemPerPage;\n  const endIndex = currentPage * itemPerPage > items.length\n    ? items.length\n    : currentPage * itemPerPage;\n  const itemsOnCurrentPage = items.slice(startIndex, endIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemPerPage}\n            onChange={(event) => {\n              setItemPerPage(Number(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {\n          itemsOnCurrentPage.map(item => (\n            <li data-cy=\"item\">{item}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}